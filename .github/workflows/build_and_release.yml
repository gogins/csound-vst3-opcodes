name: Build on push or pull request, upload artifacts, and create pre-release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch.
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows this workflow to be run manually from the Actions tab.
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.config.os }} 
    strategy:
      matrix:
        config:
        - name: "Windows Latest MSVC"
          os: windows-latest
          cc: "cl"
          cxx: "cl"
          environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
        - name: "Ubuntu Latest GCC"
          os: ubuntu-latest
          cc: "gcc"
          cxx: "g++"
        - name: "macOS Latest Clang"
          os: macos-latest
          cc: "clang"
          cxx: "clang++"

    steps:
      - name: Check out csound-vst3-opcodes
        uses: actions/checkout@v2

      - name: Fetch the current VST3 SDK and Csound sources
        run: bash update-submodules.bash
        
      - name: Build on Mac OS
        if: runner.os == 'macOS'
        run: |
          bash clean-build-macos.bash
          
      - name: Build on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt install cmake gcc "libstdc++6" libx11-xcb-dev libxcb-util-dev libxcb-cursor-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev libfontconfig1-dev libcairo2-dev libgtkmm-3.0-dev libsqlite3-dev libxcb-keysyms1-dev
          bash clean-build-linux.bash
        
      - name: Build on Windows
        if: runner.os == 'Windows'
        run: |
          bash clean-build-windows.bash
          
      - uses: actions/upload-artifact@v2
        if: runner.os == 'macOS'
        with:
          name: MacOS-libvst3_plugins
          path: |
            build-macos/*.dylib
            build-macos/*.so
            build-macos/adelay.vst3
            build-macos/againsimple.vst3
            build-macos/again.vst3
            build-macos/channelcontext.vst3
            build-macos/hostchecker.vst3
            build-macos/legacymidiccout.vst3
            build-macos/mda-vst3.vst3
            build-macos/noteexpressionsynth.vst3
            build-macos/noteexpressiontext.vst3
            build-macos/panner.vst3
            build-macos/pitchnames.vst3
            build-macos/prefetchablesupport.vst3
            build-macos/programchange.vst3
            build-macos/syncdelay.vst3
            LICENSE
            README.md
            VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/README.md
            csound-vst3/vst3-opcodes/VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/vst3-opcodes.csd
            
      - uses: actions/upload-artifact@v2
        if: runner.os == 'Windows'
        with:
          name: Windows-vst3_plugins
          path: |
            build-windows/*.dll
            build-windows/*.pdb
            build-windows/adelay.vst3
            build-windows/againsimple.vst3
            build-windows/again.vst3
            build-windows/channelcontext.vst3
            build-windows/hostchecker.vst3
            build-windows/legacymidiccout.vst3
            build-windows/mda-vst3.vst3
            build-windows/noteexpressionsynth.vst3
            build-windows/noteexpressiontext.vst3
            build-windows/panner.vst3
            build-windows/pitchnames.vst3
            build-windows/prefetchablesupport.vst3
            build-windows/programchange.vst3
            build-windows/syncdelay.vst3
            LICENSE
            README.md
            VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/README.md
            csound-vst3/vst3-opcodes/VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/vst3-opcodes.csd

      - uses: actions/upload-artifact@v2
        if: runner.os == 'Linux'
        with:
          name: Linux-libvst3_plugins
          path: |
            build-linux/*.so
            build-linux/adelay.vst3
            build-linux/againsimple.vst3
            build-linux/again.vst3
            build-linux/channelcontext.vst3
            build-linux/hostchecker.vst3
            build-linux/legacymidiccout.vst3
            build-linux/mda-vst3.vst3
            build-linux/noteexpressionsynth.vst3
            build-linux/noteexpressiontext.vst3
            build-linux/panner.vst3
            build-linux/pitchnames.vst3
            build-linux/prefetchablesupport.vst3
            build-linux/programchange.vst3
            build-linux/syncdelay.vst3
            LICENSE
            README.md
            VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/README.md
            csound-vst3/vst3-opcodes/VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/vst3-opcodes.csd
            
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: runner.os == 'Linux'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "linux-latest"
          prerelease: true
          title: "Linux Development Release"
          files: |
            build-linux/*.so
            build-linux/adelay.vst3
            build-linux/againsimple.vst3
            build-linux/again.vst3
            build-linux/channelcontext.vst3
            build-linux/hostchecker.vst3
            build-linux/legacymidiccout.vst3
            build-linux/mda-vst3.vst3
            build-linux/noteexpressionsynth.vst3
            build-linux/noteexpressiontext.vst3
            build-linux/panner.vst3
            build-linux/pitchnames.vst3
            build-linux/prefetchablesupport.vst3
            build-linux/programchange.vst3
            build-linux/syncdelay.vst3
            LICENSE
            README.md
            VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/README.md
            csound-vst3/vst3-opcodes/VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/vst3-opcodes.csd
           
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: runner.os == 'Windows'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "windows-latest"
          prerelease: true
          title: "Windows Development Release"
          files: |
            build-windows/*.dll
            build-windows/*.pdb
            build-windows/adelay.vst3
            build-windows/againsimple.vst3
            build-windows/again.vst3
            build-windows/channelcontext.vst3
            build-windows/hostchecker.vst3
            build-windows/legacymidiccout.vst3
            build-windows/mda-vst3.vst3
            build-windows/noteexpressionsynth.vst3
            build-windows/noteexpressiontext.vst3
            build-windows/panner.vst3
            build-windows/pitchnames.vst3
            build-windows/prefetchablesupport.vst3
            build-windows/programchange.vst3
            build-windows/syncdelay.vst3
            LICENSE
            README.md
            VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/README.md
            csound-vst3/vst3-opcodes/VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/vst3-opcodes.csd
            
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: runner.os == 'macOS'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "macos-latest"
          prerelease: true
          title: "Mac OS Development Release"
          files: |
            build-macos/*.dylib
            build-macos/*.so
            build-macos/*.so
            build-macos/adelay.vst3
            build-macos/againsimple.vst3
            build-macos/again.vst3
            build-macos/channelcontext.vst3
            build-macos/hostchecker.vst3
            build-macos/legacymidiccout.vst3
            build-macos/mda-vst3.vst3
            build-macos/noteexpressionsynth.vst3
            build-macos/noteexpressiontext.vst3
            build-macos/panner.vst3
            build-macos/pitchnames.vst3
            build-macos/prefetchablesupport.vst3
            build-macos/programchange.vst3
            build-macos/syncdelay.vst3
            LICENSE
            README.md
            VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/README.md
            csound-vst3/vst3-opcodes/VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3/vst3-opcodes/vst3-opcodes.csd

            

