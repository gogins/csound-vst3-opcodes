# NOTE: Csound is not installed and is not built. These actions use a csound 
# submodule to obtain Csound's header files, which are all that is required. 
# Csound's float-version.h and version.h files must be created in place.

name: Build on push or pull request, upload artifacts, and create pre-release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch.
  push:
    branches: [ master, csound_submodule ]
  pull_request:
    branches: [ master ]

  # Allows this workflow to be run manually from the Actions tab.
  workflow_dispatch:
  
env:
    # This will change for later macOS versions, to /opt/homebrew.
    HOMEBREW_PREFIX: /usr/local
jobs:
  build:
    runs-on: ${{ matrix.config.os }} 
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "macOS Latest Clang"
          os: macos-latest
          cc: "clang"
          cxx: "clang++"
        - name: "Ubuntu Latest GCC"
          os: ubuntu-latest
          cc: "gcc"
          cxx: "g++"
        - name: "Windows Latest MSVC"
          os: windows-latest
          cc: "cl"
          cxx: "cl"
          environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
    steps:
      - name: Check out csound-vst3-opcodes
        uses: actions/checkout@v3

      - name: Fetch the current VST3 SDK 
        run: bash update-submodules.bash
        
      - name: Build on Mac OS
        if: runner.os == 'macOS'
        run: |
          echo "Trying to find csdl.h..."
          find /Users/runner -name "csdl.h" -ls 2>/dev/null
          bash clean-build-macos.bash
          ls -ll
          bash zip-macos.bash
          echo "Finding plugin opcodes..."
          find . -name "*vst3_plugins.dylib" -ls 2>/dev/null
          
      - name: Build on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install --fix-missing cmake libx11-xcb-dev libxcb-util-dev libxcb-cursor-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev libfontconfig1-dev libcairo2-dev libgtkmm-3.0-dev libsqlite3-dev libxcb-keysyms1-dev
          echo "Trying to find csdl.h..."
          find /usr -name "csdl.h" -ls 2>/dev/null
          find /home/runner -name "csdl.h" -ls 2>/dev/null
          bash clean-build-linux.bash
          ls -ll
          bash zip-linux.bash
          echo "Finding plugin opcodes..."
          find . -name "*vst3_plugins.so" -ls 2>/dev/null
        
      - name: Build on Windows
        if: runner.os == 'Windows'
        run: |
          # https://github.com/csound/csound/releases/download/6.17.0/csound-6.17.0-windows-x64-installer.zip
          bash clean-build-windows.bash
          bash zip-windows.bash
          bash clean-build-windows-debug.bash
          dir
          bash zip-windows-debug.bash
          echo "Finding plugin opcodes..."
          dir /s "*vst3_plugins.dll"
                      
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: runner.os == 'macOS'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "macos-latest"
          prerelease: true
          title: "Mac OS Development Release"
          files: |
            LICENSE
            README.md
            VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3-macos.zip

      - uses: "marvinpinto/action-automatic-releases@latest"
        if: runner.os == 'Linux'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "linux-latest"
          prerelease: true
          title: "Linux Development Release"
          files: |
            LICENSE
            README.md
            VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3-linux.zip
           
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: runner.os == 'Windows'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "windows-latest"
          prerelease: true
          title: "Windows Development Release"
          files: |
            LICENSE
            README.md
            VST_Compatible_Logo_Steinberg_with_TM_negative.png
            csound-vst3-windows.zip
            csound-vst3-windows-debug.zip
            
 
            

